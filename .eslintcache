[{"/u01/code/shared-health-record/src/lib/hl7MllpSender.ts":"1","/u01/code/shared-health-record/src/workflows/labWorkflowsBw.ts":"2"},{"size":1599,"mtime":1691536925750,"results":"3","hashOfConfig":"4"},{"size":30252,"mtime":1691536926174},{"filePath":"5","messages":"6","suppressedMessages":"7","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"h0u5wi","/u01/code/shared-health-record/src/lib/hl7MllpSender.ts",["8","9","10"],[],{"ruleId":"11","severity":1,"message":"12","line":19,"column":40,"nodeType":"13","messageId":"14","endLine":19,"endColumn":43,"suggestions":"15"},{"ruleId":"11","severity":1,"message":"12","line":25,"column":75,"nodeType":"13","messageId":"14","endLine":25,"endColumn":78,"suggestions":"16"},{"ruleId":"11","severity":1,"message":"12","line":25,"column":89,"nodeType":"13","messageId":"14","endLine":25,"endColumn":92,"suggestions":"17"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["18","19"],["20","21"],["22","23"],{"messageId":"24","fix":"25","desc":"26"},{"messageId":"27","fix":"28","desc":"29"},{"messageId":"24","fix":"30","desc":"26"},{"messageId":"27","fix":"31","desc":"29"},{"messageId":"24","fix":"32","desc":"26"},{"messageId":"27","fix":"33","desc":"29"},"suggestUnknown",{"range":"34","text":"35"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"34","text":"36"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"37","text":"35"},{"range":"37","text":"36"},{"range":"38","text":"35"},{"range":"38","text":"36"},[453,456],"unknown","never",[752,755],[766,769]]