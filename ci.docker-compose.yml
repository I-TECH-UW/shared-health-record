version: '3.9'

# Docker Compose for Github CI setup
services:
  shr:
    container_name: shr
    hostname: shr
    image: test-image:latest
    environment:
      - NODE_ENV=docker
    volumes:
      - ./config/config_ci.json:/app/config/config_docker.json
      - ./config/mediator_ci.json:/app/config/mediator_docker.json
    networks:
      - test
  shr-fhir:
    image: hapiproject/hapi:latest
    hostname: shr-fhir
    restart: unless-stopped
    volumes:
      - hapi-data:/data/hapi
    networks:
      - test
  ###
  # OpenHIM
  ###
  openhim-core:
    image: jembi/openhim-core:latest
    hostname: openhim-core
    restart: unless-stopped
    environment:
      mongo_url: 'mongodb://mongo-db/openhim'
      mongo_atnaUrl: 'mongodb://mongo-db/openhim'
      NODE_ENV: 'development'
    ports:
      - 8080:8080
      - 5000:5000
      - 5001:5001
    networks:
      - test
    healthcheck:
      test: 'curl -sSk https://localhost:8080/heartbeat || exit 1'
      interval: 30s
      timeout: 30s
      retries: 3
  mongo-db:
    image: mongo:3.4
    volumes:
      - 'mongo-data:/data/db'
    restart: unless-stopped
    networks:
      - test
  # OpenHIM Config
  openhim-config:
    container_name: openhim-config
    image: ghcr.io/i-tech-uw/openhim-config:v0.0.0
    volumes:
      - ./config/openhim/ci-openhim-config.json:/app/test-openhim-config.json
    networks:
      - test
  # Newman Tests
  newman:
    image: postman/newman
    environment:
      - $POSTMAN_COLLECTION
    volumes:
      - ./.postman:/.postman
    entrypoint: newman run $POSTMAN_COLLECTION -e /.postman/ci.postman_environment.json --insecure --timeout-request 10000 --delay-request 10000
    networks:
      - test
  # MLLP Tests
  mllp_tests:
    container_name: mllp_tests
    image: ghcr.io/b-techbw/mllp-tester:main
    volumes:
      - ./test/mllp:/test
    networks:
      - test
  # Task Runner
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    hostname: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - test
  kafka:
    image: 'bitnami/kafka:latest'
    hostname: kafka
    container_name: kafka
    environment:
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - test
    entrypoint: sh -c 'sleep 30 && /opt/bitnami/scripts/kafka/entrypoint.sh /opt/bitnami/scripts/kafka/run.sh'

  # HL7 Converter
  fhir-converter:
    container_name: fhir-converter
    hostname: fhir-converter
    restart: unless-stopped
    image: ghcr.io/b-techbw/openhim-mediator-fhir-converter:v3.1.4
    volumes:
      - ./config/fhir-converter/config.json:/app/config.json

  # Not necessary
  openhim-console:
    image: jembi/openhim-console:latest
    restart: unless-stopped
    ports:
      - '80:80'
    #volumes:
    # - ./configs/openhim-console/default.json:/usr/share/nginx/html/config/default.json
    healthcheck:
      test: 'curl -sS http://localhost || exit 1'
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - test
volumes:
  mongo-data:
  hapi-data:
  kafka-data:

networks:
  test:
