version: '3.8'

## Container debugging:
# 1. append the following lines to desired container
# 2. boot up the container using `docker-compose up -d`
# 3 run `docker exec -it <container-name> bash` to start interactive shell
#
#    tty: true
#    stdin_open: true
#    entrypoint: bash

services:
  # shr: Run natively using yarn, or see docker-compose.yml
  shr:
    container_name: shr
    hostname: shr
    image: ghcr.io/i-tech-uw/shared-health-record:${SHR_VERSION-latest}
    build: .
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=docker
    volumes:
      - ./config/config_docker.json:/app/config/config_docker.json
      - ./config/mediator_docker.json:/app/config/mediator_docker.json

  shr-fhir:
    container_name: shr-fhir
    hostname: shr-fhir
    image: hapiproject/hapi:latest
    restart: unless-stopped
    volumes:
      - /data/hapi

  # Kafka Task Runners
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    hostname: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - /data
  kafka:
    image: 'bitnami/kafka:latest'
    hostname: kafka
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - /bitnami/kafka
    depends_on:
      - zookeeper
    entrypoint: sh -c 'sleep 30 && /opt/bitnami/scripts/kafka/entrypoint.sh /opt/bitnami/scripts/kafka/run.sh' # prevent zookeeper conflict error

  ###
  # OpenHIM
  ###
  openhim-core:
    profiles: ['openhim']
    image: jembi/openhim-core:latest
    hostname: openhim-core
    restart: unless-stopped
    environment:
      mongo_url: 'mongodb://mongo-db/openhim'
      mongo_atnaUrl: 'mongodb://mongo-db/openhim'
      NODE_ENV: 'development'
    ports:
      - 8080:8080
      - 5000:5000
      - 5001:5001
    healthcheck:
      test: 'curl -sSk https://localhost:8080/heartbeat || exit 1'
      interval: 30s
      timeout: 30s
      retries: 3
  mongo-db:
    profiles: ['openhim']
    image: mongo:3.4
    volumes:
      - '/data/db'
    restart: unless-stopped
  # OpenHIM Config
  openhim-config:
    profiles: ['openhim']
    container_name: openhim-config
    image: ghcr.io/i-tech-uw/openhim-config:v0.0.0
    volumes:
      - ./config/openhim/ci-openhim-config.json:/app/test-openhim-config.json

  # Newman Tests
  newman:
    # profiles: ['test']
    image: postman/newman
    environment:
      - $POSTMAN_COLLECTION
    volumes:
      - ./.postman:/.postman
    entrypoint: newman run $POSTMAN_COLLECTION -e /.postman/ci.postman_environment.json --insecure --timeout-request 10000 --delay-request 10000

  # MLLP Tests
  mllp_tests:
    # profiles: ['test']
    container_name: mllp_tests
    image: ghcr.io/b-techbw/mllp-tester:main
    volumes:
      - ./test/mllp:/test
