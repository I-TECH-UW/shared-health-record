name: CI/CD

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  unit-test:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1
    
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
        cache: 'yarn'
        registry-url: https://npm.pkg.github.com
        scope: '@b-techbw'
  
    - run: cat .npmrc

    - name: Yarn
      run: yarn -D
      env: 
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
    - name: Build
      run: yarn tsc
    
    - name: Run Jest Tests
      run: yarn test:unit
  
  build-test-push:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - run: echo ${{ steps.meta.outputs.tags }}

      - name: Build SHR
        uses: docker/build-push-action@v2
        with:
          tags: test-image:latest
          push: false
          load: true
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: NODE_AUTH_TOKEN=${{ secrets.NPM_TOKEN }}
      
      - name: Pull containers
        run: docker-compose -f ci.docker-compose.yml pull shr-fhir openhim-core mongo-db newman

      - name: Cache containers
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - name: Start containers
        run: docker-compose -f ci.docker-compose.yml up -d shr-fhir mongo-db openhim-core 
        
      - name: Load openhim config
        run: docker-compose -f ci.docker-compose.yml up -d openhim-config

      - name: Sleep for 60 seconds
        run: sleep 60s
        shell: bash

      - name: Display docker logs for openhim config
        run: docker-compose -f ci.docker-compose.yml logs openhim-config

      - name: Run SHR image
        run: docker-compose -f ci.docker-compose.yml up -d shr
      
      - name: Sleep for 10 seconds
        run: sleep 10s
        shell: bash

      - name: Show SHR Log
        run: docker-compose -f "ci.docker-compose.yml" logs shr
      
      - name: Check openhim-core
        run: curl -sSk https://localhost:8080/heartbeat

      - name: Show containers
        run: docker-compose -f "ci.docker-compose.yml" ps
      
      # Newman Container Approach
      - name: Run General Tests Collection
        env: 
          POSTMAN_COLLECTION: https://www.getpostman.com/collections/481bb6cc8e1e964fd8bd
        run: docker-compose -f ci.docker-compose.yml up --exit-code-from newman newman 

      - name: Run Laboratory Workflows Collection
        env: 
          POSTMAN_COLLECTION: https://www.getpostman.com/collections/ff5183adca5b5e720338
        run: docker-compose -f ci.docker-compose.yml up --exit-code-from newman newman
      
      - name: Run Botswana Laboratory Workflows Collection
        env: 
          POSTMAN_COLLECTION: https://www.getpostman.com/collections/2ee8ebff39c078bac256
        run: docker-compose -f ci.docker-compose.yml up --exit-code-from newman newman

      - name: Stop containers
        if: always()
        run: docker-compose -f "dev.docker-compose.yml" down

      - name: Get Package Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }},${{ env.REGISTRY }}/${{ github.actor.lowercase }}/${{env.IMAGE_NAME}}:${{steps.package-version.outputs.current-version}} 
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: NODE_AUTH_TOKEN=${{ secrets.NPM_TOKEN }}          